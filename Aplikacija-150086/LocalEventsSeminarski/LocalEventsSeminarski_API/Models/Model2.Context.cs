//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LocalEventsSeminarski_API.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LocalEventsEntities2 : DbContext
    {
        public LocalEventsEntities2()
            : base("name=LocalEventsEntities2")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AgeRange> AgeRanges { get; set; }
        public virtual DbSet<Drzava> Drzavas { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<EventGallery> EventGalleries { get; set; }
        public virtual DbSet<EventTip> EventTips { get; set; }
        public virtual DbSet<EventToVisit> EventToVisits { get; set; }
        public virtual DbSet<Grad> Grads { get; set; }
        public virtual DbSet<Korisnik> Korisniks { get; set; }
        public virtual DbSet<KorisnikUloga> KorisnikUlogas { get; set; }
        public virtual DbSet<Lokacija> Lokacijas { get; set; }
        public virtual DbSet<LokacijaTip> LokacijaTips { get; set; }
        public virtual DbSet<Organizacija> Organizacijas { get; set; }
        public virtual DbSet<Posjetilac> Posjetilacs { get; set; }
        public virtual DbSet<PosjetilacLokacija> PosjetilacLokacijas { get; set; }
        public virtual DbSet<PosjetilacOrganizacija> PosjetilacOrganizacijas { get; set; }
        public virtual DbSet<Slika> Slikas { get; set; }
        public virtual DbSet<Uloga> Ulogas { get; set; }
    
        public virtual ObjectResult<GetSlikaByID_Result> GetSlikaByID(Nullable<int> slikaID)
        {
            var slikaIDParameter = slikaID.HasValue ?
                new ObjectParameter("SlikaID", slikaID) :
                new ObjectParameter("SlikaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSlikaByID_Result>("GetSlikaByID", slikaIDParameter);
        }
    
        public virtual ObjectResult<esp_AgeRange_SelectAll_Result> esp_AgeRange_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_AgeRange_SelectAll_Result>("esp_AgeRange_SelectAll");
        }
    
        public virtual ObjectResult<esp_EventAgeRange_GetByEvent_Result> esp_EventAgeRange_GetByEvent(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventAgeRange_GetByEvent_Result>("esp_EventAgeRange_GetByEvent", eventIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_EventAgeRange_Insert(Nullable<int> ageRangeID, Nullable<int> eventID)
        {
            var ageRangeIDParameter = ageRangeID.HasValue ?
                new ObjectParameter("AgeRangeID", ageRangeID) :
                new ObjectParameter("AgeRangeID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_EventAgeRange_Insert", ageRangeIDParameter, eventIDParameter);
        }
    
        public virtual ObjectResult<esp_EventGallery_GetByEvent_Result> esp_EventGallery_GetByEvent(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventGallery_GetByEvent_Result>("esp_EventGallery_GetByEvent", eventIDParameter);
        }
    
        public virtual ObjectResult<esp_EventGallery_GetByID_Result> esp_EventGallery_GetByID(Nullable<int> eventGalleryID)
        {
            var eventGalleryIDParameter = eventGalleryID.HasValue ?
                new ObjectParameter("EventGalleryID", eventGalleryID) :
                new ObjectParameter("EventGalleryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventGallery_GetByID_Result>("esp_EventGallery_GetByID", eventGalleryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_EventGallery_Insert(Nullable<int> eventID, string naziv, string opis, Nullable<System.DateTime> datumKreiranja)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var datumKreiranjaParameter = datumKreiranja.HasValue ?
                new ObjectParameter("DatumKreiranja", datumKreiranja) :
                new ObjectParameter("DatumKreiranja", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_EventGallery_Insert", eventIDParameter, nazivParameter, opisParameter, datumKreiranjaParameter);
        }
    
        public virtual int esp_EventGallery_Update(Nullable<int> eventGalleryID, string naziv, string opis)
        {
            var eventGalleryIDParameter = eventGalleryID.HasValue ?
                new ObjectParameter("EventGalleryID", eventGalleryID) :
                new ObjectParameter("EventGalleryID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventGallery_Update", eventGalleryIDParameter, nazivParameter, opisParameter);
        }
    
        public virtual ObjectResult<esp_EventTip_SelectAll_Result> esp_EventTip_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventTip_SelectAll_Result>("esp_EventTip_SelectAll");
        }
    
        public virtual ObjectResult<esp_EventToVisit_GetByPosjetilacID_Result> esp_EventToVisit_GetByPosjetilacID(Nullable<int> posjetilacID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventToVisit_GetByPosjetilacID_Result>("esp_EventToVisit_GetByPosjetilacID", posjetilacIDParameter);
        }
    
        public virtual ObjectResult<esp_EventToVisit_GetDetails_Result> esp_EventToVisit_GetDetails(Nullable<int> posjetilacID, Nullable<int> eventID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_EventToVisit_GetDetails_Result>("esp_EventToVisit_GetDetails", posjetilacIDParameter, eventIDParameter);
        }
    
        public virtual int esp_EventToVisit_Remove(Nullable<int> eventID, Nullable<int> posjetilacID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventToVisit_Remove", eventIDParameter, posjetilacIDParameter);
        }
    
        public virtual int esp_EventToVisit_UpdateAll(Nullable<int> posjetilacID, Nullable<int> eventID, string comment, Nullable<int> rating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventToVisit_UpdateAll", posjetilacIDParameter, eventIDParameter, commentParameter, ratingParameter);
        }
    
        public virtual int esp_EventToVisit_UpdateComment(Nullable<int> posjetilacID, Nullable<int> eventID, string comment)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventToVisit_UpdateComment", posjetilacIDParameter, eventIDParameter, commentParameter);
        }
    
        public virtual int esp_EventToVisit_UpdateRating(Nullable<int> posjetilacID, Nullable<int> eventID, Nullable<int> rating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_EventToVisit_UpdateRating", posjetilacIDParameter, eventIDParameter, ratingParameter);
        }
    
        public virtual ObjectResult<esp_Event_GetByEventTip_Result> esp_Event_GetByEventTip(Nullable<int> eventTipID)
        {
            var eventTipIDParameter = eventTipID.HasValue ?
                new ObjectParameter("EventTipID", eventTipID) :
                new ObjectParameter("EventTipID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetByEventTip_Result>("esp_Event_GetByEventTip", eventTipIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_GetByID_Result> esp_Event_GetByID(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetByID_Result>("esp_Event_GetByID", eventIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_GetComments_Result> esp_Event_GetComments(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetComments_Result>("esp_Event_GetComments", eventIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_GetDetails_Result> esp_Event_GetDetails(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetDetails_Result>("esp_Event_GetDetails", eventIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_GetEvents_Result> esp_Event_GetEvents(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetEvents_Result>("esp_Event_GetEvents", nazivParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Event_Insert(Nullable<int> kreatorID, string naziv, string opis, Nullable<System.DateTime> datumKreiranja, Nullable<System.DateTime> datumOdrzavanja, Nullable<System.TimeSpan> vrijemePocetka, Nullable<System.TimeSpan> vrijemeZavrsetka, byte[] slika, byte[] slikaThumb, string status, Nullable<int> eventTipID, Nullable<int> organizacijaID, Nullable<int> lokacijaID)
        {
            var kreatorIDParameter = kreatorID.HasValue ?
                new ObjectParameter("KreatorID", kreatorID) :
                new ObjectParameter("KreatorID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var datumKreiranjaParameter = datumKreiranja.HasValue ?
                new ObjectParameter("DatumKreiranja", datumKreiranja) :
                new ObjectParameter("DatumKreiranja", typeof(System.DateTime));
    
            var datumOdrzavanjaParameter = datumOdrzavanja.HasValue ?
                new ObjectParameter("DatumOdrzavanja", datumOdrzavanja) :
                new ObjectParameter("DatumOdrzavanja", typeof(System.DateTime));
    
            var vrijemePocetkaParameter = vrijemePocetka.HasValue ?
                new ObjectParameter("VrijemePocetka", vrijemePocetka) :
                new ObjectParameter("VrijemePocetka", typeof(System.TimeSpan));
    
            var vrijemeZavrsetkaParameter = vrijemeZavrsetka.HasValue ?
                new ObjectParameter("VrijemeZavrsetka", vrijemeZavrsetka) :
                new ObjectParameter("VrijemeZavrsetka", typeof(System.TimeSpan));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var eventTipIDParameter = eventTipID.HasValue ?
                new ObjectParameter("EventTipID", eventTipID) :
                new ObjectParameter("EventTipID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Event_Insert", kreatorIDParameter, nazivParameter, opisParameter, datumKreiranjaParameter, datumOdrzavanjaParameter, vrijemePocetkaParameter, vrijemeZavrsetkaParameter, slikaParameter, slikaThumbParameter, statusParameter, eventTipIDParameter, organizacijaIDParameter, lokacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_OrderByDatum_Result> esp_Event_OrderByDatum()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_OrderByDatum_Result>("esp_Event_OrderByDatum");
        }
    
        public virtual ObjectResult<esp_Event_OrderByLokacija_Result> esp_Event_OrderByLokacija()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_OrderByLokacija_Result>("esp_Event_OrderByLokacija");
        }
    
        public virtual int esp_Event_ToVisit(Nullable<int> eventID, Nullable<int> posjetilacID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Event_ToVisit", eventIDParameter, posjetilacIDParameter);
        }
    
        public virtual ObjectResult<esp_Event_Top5ByGradMjesec_Result> esp_Event_Top5ByGradMjesec(Nullable<int> gradID, Nullable<int> mjesec)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var mjesecParameter = mjesec.HasValue ?
                new ObjectParameter("Mjesec", mjesec) :
                new ObjectParameter("Mjesec", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_Top5ByGradMjesec_Result>("esp_Event_Top5ByGradMjesec", gradIDParameter, mjesecParameter);
        }
    
        public virtual int esp_Event_Update(Nullable<int> eventID, string naziv, string opis, Nullable<int> lokacijaID, Nullable<int> organizacijaID, Nullable<int> eventTipID, Nullable<System.TimeSpan> vrijemePocetka, Nullable<System.TimeSpan> vrijemeZavrsetka, Nullable<System.DateTime> datumOdrzavanja, string status)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var eventTipIDParameter = eventTipID.HasValue ?
                new ObjectParameter("EventTipID", eventTipID) :
                new ObjectParameter("EventTipID", typeof(int));
    
            var vrijemePocetkaParameter = vrijemePocetka.HasValue ?
                new ObjectParameter("VrijemePocetka", vrijemePocetka) :
                new ObjectParameter("VrijemePocetka", typeof(System.TimeSpan));
    
            var vrijemeZavrsetkaParameter = vrijemeZavrsetka.HasValue ?
                new ObjectParameter("VrijemeZavrsetka", vrijemeZavrsetka) :
                new ObjectParameter("VrijemeZavrsetka", typeof(System.TimeSpan));
    
            var datumOdrzavanjaParameter = datumOdrzavanja.HasValue ?
                new ObjectParameter("DatumOdrzavanja", datumOdrzavanja) :
                new ObjectParameter("DatumOdrzavanja", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Event_Update", eventIDParameter, nazivParameter, opisParameter, lokacijaIDParameter, organizacijaIDParameter, eventTipIDParameter, vrijemePocetkaParameter, vrijemeZavrsetkaParameter, datumOdrzavanjaParameter, statusParameter);
        }
    
        public virtual int esp_Event_UpdateStatus(string status, Nullable<int> eventID)
        {
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Event_UpdateStatus", statusParameter, eventIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Events_Insert(string naziv, string opis, Nullable<int> kreatorID, Nullable<System.DateTime> datumKreiranja, Nullable<System.DateTime> datumOdrzavanja, Nullable<System.TimeSpan> vrijemePocetka, Nullable<System.TimeSpan> vrijemeZavrsetka, byte[] slika, byte[] slikaThumb, string status, Nullable<int> eventTipID, Nullable<int> organizacijaID, Nullable<int> lokacijaID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var kreatorIDParameter = kreatorID.HasValue ?
                new ObjectParameter("KreatorID", kreatorID) :
                new ObjectParameter("KreatorID", typeof(int));
    
            var datumKreiranjaParameter = datumKreiranja.HasValue ?
                new ObjectParameter("DatumKreiranja", datumKreiranja) :
                new ObjectParameter("DatumKreiranja", typeof(System.DateTime));
    
            var datumOdrzavanjaParameter = datumOdrzavanja.HasValue ?
                new ObjectParameter("DatumOdrzavanja", datumOdrzavanja) :
                new ObjectParameter("DatumOdrzavanja", typeof(System.DateTime));
    
            var vrijemePocetkaParameter = vrijemePocetka.HasValue ?
                new ObjectParameter("VrijemePocetka", vrijemePocetka) :
                new ObjectParameter("VrijemePocetka", typeof(System.TimeSpan));
    
            var vrijemeZavrsetkaParameter = vrijemeZavrsetka.HasValue ?
                new ObjectParameter("VrijemeZavrsetka", vrijemeZavrsetka) :
                new ObjectParameter("VrijemeZavrsetka", typeof(System.TimeSpan));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var eventTipIDParameter = eventTipID.HasValue ?
                new ObjectParameter("EventTipID", eventTipID) :
                new ObjectParameter("EventTipID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Events_Insert", nazivParameter, opisParameter, kreatorIDParameter, datumKreiranjaParameter, datumOdrzavanjaParameter, vrijemePocetkaParameter, vrijemeZavrsetkaParameter, slikaParameter, slikaThumbParameter, statusParameter, eventTipIDParameter, organizacijaIDParameter, lokacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Events_SelectAll_Result> esp_Events_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Events_SelectAll_Result>("esp_Events_SelectAll");
        }
    
        public virtual ObjectResult<esp_Grad_SelectAll_Result> esp_Grad_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Grad_SelectAll_Result>("esp_Grad_SelectAll");
        }
    
        public virtual ObjectResult<esp_Korisnik_GetByID_Result> esp_Korisnik_GetByID(Nullable<int> korisnikID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnik_GetByID_Result>("esp_Korisnik_GetByID", korisnikIDParameter);
        }
    
        public virtual ObjectResult<esp_Korisnik_GetByKorisnickoIme_Result> esp_Korisnik_GetByKorisnickoIme(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnik_GetByKorisnickoIme_Result>("esp_Korisnik_GetByKorisnickoIme", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<esp_Korisnik_GetByUsername_Result> esp_Korisnik_GetByUsername(string korisnickoIme)
        {
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnik_GetByUsername_Result>("esp_Korisnik_GetByUsername", korisnickoImeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Korisnik_Insert(string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<int> gradID, byte[] slika, byte[] slikaThumb)
        {
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Korisnik_Insert", imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, gradIDParameter, slikaParameter, slikaThumbParameter);
        }
    
        public virtual ObjectResult<esp_Korisnik_SelectAll_Result> esp_Korisnik_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnik_SelectAll_Result>("esp_Korisnik_SelectAll");
        }
    
        public virtual ObjectResult<esp_Korisnik_SelectByImePrezime_Result> esp_Korisnik_SelectByImePrezime(string imePrezime)
        {
            var imePrezimeParameter = imePrezime != null ?
                new ObjectParameter("ImePrezime", imePrezime) :
                new ObjectParameter("ImePrezime", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Korisnik_SelectByImePrezime_Result>("esp_Korisnik_SelectByImePrezime", imePrezimeParameter);
        }
    
        public virtual int esp_Korisnik_Update(Nullable<int> korisnikID, string ime, string prezime, string email, string telefon, string korisnickoIme, string lozinkaSalt, string lozinkaHash, Nullable<bool> status, Nullable<int> gradID)
        {
            var korisnikIDParameter = korisnikID.HasValue ?
                new ObjectParameter("KorisnikID", korisnikID) :
                new ObjectParameter("KorisnikID", typeof(int));
    
            var imeParameter = ime != null ?
                new ObjectParameter("Ime", ime) :
                new ObjectParameter("Ime", typeof(string));
    
            var prezimeParameter = prezime != null ?
                new ObjectParameter("Prezime", prezime) :
                new ObjectParameter("Prezime", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var telefonParameter = telefon != null ?
                new ObjectParameter("Telefon", telefon) :
                new ObjectParameter("Telefon", typeof(string));
    
            var korisnickoImeParameter = korisnickoIme != null ?
                new ObjectParameter("KorisnickoIme", korisnickoIme) :
                new ObjectParameter("KorisnickoIme", typeof(string));
    
            var lozinkaSaltParameter = lozinkaSalt != null ?
                new ObjectParameter("LozinkaSalt", lozinkaSalt) :
                new ObjectParameter("LozinkaSalt", typeof(string));
    
            var lozinkaHashParameter = lozinkaHash != null ?
                new ObjectParameter("LozinkaHash", lozinkaHash) :
                new ObjectParameter("LozinkaHash", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(bool));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Korisnik_Update", korisnikIDParameter, imeParameter, prezimeParameter, emailParameter, telefonParameter, korisnickoImeParameter, lozinkaSaltParameter, lozinkaHashParameter, statusParameter, gradIDParameter);
        }
    
        public virtual ObjectResult<esp_LokacijaTip_SelectAll_Result> esp_LokacijaTip_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_LokacijaTip_SelectAll_Result>("esp_LokacijaTip_SelectAll");
        }
    
        public virtual ObjectResult<esp_Lokacija_GetByID_Result> esp_Lokacija_GetByID(Nullable<int> lokacijaID)
        {
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_GetByID_Result>("esp_Lokacija_GetByID", lokacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Lokacija_GetComments_Result> esp_Lokacija_GetComments(Nullable<int> lokacijaID)
        {
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_GetComments_Result>("esp_Lokacija_GetComments", lokacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Lokacija_GetFavoriteLokacijas_Result> esp_Lokacija_GetFavoriteLokacijas(Nullable<int> posjetilacID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_GetFavoriteLokacijas_Result>("esp_Lokacija_GetFavoriteLokacijas", posjetilacIDParameter);
        }
    
        public virtual ObjectResult<esp_Lokacija_GetLokacijaList_Result> esp_Lokacija_GetLokacijaList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_GetLokacijaList_Result>("esp_Lokacija_GetLokacijaList");
        }
    
        public virtual ObjectResult<esp_Lokacija_GetTop5ByGrad_Result> esp_Lokacija_GetTop5ByGrad(Nullable<int> gradID)
        {
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_GetTop5ByGrad_Result>("esp_Lokacija_GetTop5ByGrad", gradIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Lokacija_Input(string naziv, string opis, Nullable<int> kapacitet, string adresa, byte[] slika, byte[] slikaThumb, Nullable<double> averageRating, Nullable<int> gradID, Nullable<int> lokacijaTipID)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var kapacitetParameter = kapacitet.HasValue ?
                new ObjectParameter("Kapacitet", kapacitet) :
                new ObjectParameter("Kapacitet", typeof(int));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var averageRatingParameter = averageRating.HasValue ?
                new ObjectParameter("AverageRating", averageRating) :
                new ObjectParameter("AverageRating", typeof(double));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var lokacijaTipIDParameter = lokacijaTipID.HasValue ?
                new ObjectParameter("LokacijaTipID", lokacijaTipID) :
                new ObjectParameter("LokacijaTipID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Lokacija_Input", nazivParameter, opisParameter, kapacitetParameter, adresaParameter, slikaParameter, slikaThumbParameter, averageRatingParameter, gradIDParameter, lokacijaTipIDParameter);
        }
    
        public virtual ObjectResult<esp_Lokacija_SelectAll_Result> esp_Lokacija_SelectAll(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Lokacija_SelectAll_Result>("esp_Lokacija_SelectAll", nazivParameter);
        }
    
        public virtual int esp_Lokacija_Update(Nullable<int> lokacijaID, string naziv, string opis, Nullable<int> kapacitet, string adresa, Nullable<int> gradID, Nullable<int> lokacijaTipID)
        {
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var kapacitetParameter = kapacitet.HasValue ?
                new ObjectParameter("Kapacitet", kapacitet) :
                new ObjectParameter("Kapacitet", typeof(int));
    
            var adresaParameter = adresa != null ?
                new ObjectParameter("Adresa", adresa) :
                new ObjectParameter("Adresa", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var lokacijaTipIDParameter = lokacijaTipID.HasValue ?
                new ObjectParameter("LokacijaTipID", lokacijaTipID) :
                new ObjectParameter("LokacijaTipID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Lokacija_Update", lokacijaIDParameter, nazivParameter, opisParameter, kapacitetParameter, adresaParameter, gradIDParameter, lokacijaTipIDParameter);
        }
    
        public virtual ObjectResult<esp_Organizacija_GetByID_Result> esp_Organizacija_GetByID(Nullable<int> organizacijaID)
        {
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Organizacija_GetByID_Result>("esp_Organizacija_GetByID", organizacijaIDParameter);
        }
    
        public virtual ObjectResult<esp_Organizacija_GetComments_Result> esp_Organizacija_GetComments(Nullable<int> organizacijaID)
        {
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Organizacija_GetComments_Result>("esp_Organizacija_GetComments", organizacijaIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Organizacija_Insert(string naziv, string opis, string tip, Nullable<int> gradID, byte[] slikaLogo)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var tipParameter = tip != null ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            var slikaLogoParameter = slikaLogo != null ?
                new ObjectParameter("SlikaLogo", slikaLogo) :
                new ObjectParameter("SlikaLogo", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Organizacija_Insert", nazivParameter, opisParameter, tipParameter, gradIDParameter, slikaLogoParameter);
        }
    
        public virtual ObjectResult<esp_Organizacija_SelectAll_Result> esp_Organizacija_SelectAll(string naziv)
        {
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Organizacija_SelectAll_Result>("esp_Organizacija_SelectAll", nazivParameter);
        }
    
        public virtual int esp_Organizacija_Update(Nullable<int> organizacijaID, string naziv, string opis, string tip, Nullable<int> gradID)
        {
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var nazivParameter = naziv != null ?
                new ObjectParameter("Naziv", naziv) :
                new ObjectParameter("Naziv", typeof(string));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            var tipParameter = tip != null ?
                new ObjectParameter("Tip", tip) :
                new ObjectParameter("Tip", typeof(string));
    
            var gradIDParameter = gradID.HasValue ?
                new ObjectParameter("GradID", gradID) :
                new ObjectParameter("GradID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Organizacija_Update", organizacijaIDParameter, nazivParameter, opisParameter, tipParameter, gradIDParameter);
        }
    
        public virtual ObjectResult<esp_PosjetilacLokacija_GetByID_Result> esp_PosjetilacLokacija_GetByID(Nullable<int> posjetilacID, Nullable<int> lokacijaID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_PosjetilacLokacija_GetByID_Result>("esp_PosjetilacLokacija_GetByID", posjetilacIDParameter, lokacijaIDParameter);
        }
    
        public virtual int esp_PosjetilacLokacija_Insert(Nullable<int> posjetilacID, Nullable<int> lokacijaID, Nullable<int> locationRating, string comment)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var locationRatingParameter = locationRating.HasValue ?
                new ObjectParameter("LocationRating", locationRating) :
                new ObjectParameter("LocationRating", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacLokacija_Insert", posjetilacIDParameter, lokacijaIDParameter, locationRatingParameter, commentParameter);
        }
    
        public virtual int esp_PosjetilacLokacija_UpdateAll(Nullable<int> posjetilacID, Nullable<int> lokacijaID, string comment, Nullable<int> rating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacLokacija_UpdateAll", posjetilacIDParameter, lokacijaIDParameter, commentParameter, ratingParameter);
        }
    
        public virtual int esp_PosjetilacLokacija_UpdateComment(Nullable<int> posjetilacID, Nullable<int> lokacijaID, string comment)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacLokacija_UpdateComment", posjetilacIDParameter, lokacijaIDParameter, commentParameter);
        }
    
        public virtual int esp_PosjetilacLokacija_UpdateFavoriteStatus(Nullable<int> posjetilacID, Nullable<int> lokacijaID, Nullable<bool> isFavorite)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var isFavoriteParameter = isFavorite.HasValue ?
                new ObjectParameter("IsFavorite", isFavorite) :
                new ObjectParameter("IsFavorite", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacLokacija_UpdateFavoriteStatus", posjetilacIDParameter, lokacijaIDParameter, isFavoriteParameter);
        }
    
        public virtual int esp_PosjetilacLokacija_UpdateRating(Nullable<int> posjetilacID, Nullable<int> lokacijaID, Nullable<int> lokacijaRating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var lokacijaIDParameter = lokacijaID.HasValue ?
                new ObjectParameter("LokacijaID", lokacijaID) :
                new ObjectParameter("LokacijaID", typeof(int));
    
            var lokacijaRatingParameter = lokacijaRating.HasValue ?
                new ObjectParameter("LokacijaRating", lokacijaRating) :
                new ObjectParameter("LokacijaRating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacLokacija_UpdateRating", posjetilacIDParameter, lokacijaIDParameter, lokacijaRatingParameter);
        }
    
        public virtual ObjectResult<esp_PosjetilacOrganizacija_GetByID_Result> esp_PosjetilacOrganizacija_GetByID(Nullable<int> posjetilacID, Nullable<int> organizacijaID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_PosjetilacOrganizacija_GetByID_Result>("esp_PosjetilacOrganizacija_GetByID", posjetilacIDParameter, organizacijaIDParameter);
        }
    
        public virtual int esp_PosjetilacOrganizacija_Insert(Nullable<int> posjetilacID, Nullable<int> organizacijaID, Nullable<int> locationRating, string comment)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var locationRatingParameter = locationRating.HasValue ?
                new ObjectParameter("LocationRating", locationRating) :
                new ObjectParameter("LocationRating", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacOrganizacija_Insert", posjetilacIDParameter, organizacijaIDParameter, locationRatingParameter, commentParameter);
        }
    
        public virtual int esp_PosjetilacOrganizacija_UpdateAll(Nullable<int> posjetilacID, Nullable<int> organizacijaID, string comment, Nullable<int> rating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacOrganizacija_UpdateAll", posjetilacIDParameter, organizacijaIDParameter, commentParameter, ratingParameter);
        }
    
        public virtual int esp_PosjetilacOrganizacija_UpdateComment(Nullable<int> posjetilacID, Nullable<int> organizacijaID, string comment)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacOrganizacija_UpdateComment", posjetilacIDParameter, organizacijaIDParameter, commentParameter);
        }
    
        public virtual int esp_PosjetilacOrganizacija_UpdateRating(Nullable<int> posjetilacID, Nullable<int> organizacijaID, Nullable<int> rating)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            var organizacijaIDParameter = organizacijaID.HasValue ?
                new ObjectParameter("OrganizacijaID", organizacijaID) :
                new ObjectParameter("OrganizacijaID", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_PosjetilacOrganizacija_UpdateRating", posjetilacIDParameter, organizacijaIDParameter, ratingParameter);
        }
    
        public virtual ObjectResult<esp_Posjetilac_GetByID_Result> esp_Posjetilac_GetByID(Nullable<int> posjetilacID)
        {
            var posjetilacIDParameter = posjetilacID.HasValue ?
                new ObjectParameter("PosjetilacID", posjetilacID) :
                new ObjectParameter("PosjetilacID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Posjetilac_GetByID_Result>("esp_Posjetilac_GetByID", posjetilacIDParameter);
        }
    
        public virtual ObjectResult<esp_Slika_GetByGallery_Result> esp_Slika_GetByGallery(Nullable<int> eventGalleryID)
        {
            var eventGalleryIDParameter = eventGalleryID.HasValue ?
                new ObjectParameter("EventGalleryID", eventGalleryID) :
                new ObjectParameter("EventGalleryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Slika_GetByGallery_Result>("esp_Slika_GetByGallery", eventGalleryIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> esp_Slika_Insert(Nullable<int> eventGalleryID, byte[] slika, byte[] slikaThumb, string opis)
        {
            var eventGalleryIDParameter = eventGalleryID.HasValue ?
                new ObjectParameter("EventGalleryID", eventGalleryID) :
                new ObjectParameter("EventGalleryID", typeof(int));
    
            var slikaParameter = slika != null ?
                new ObjectParameter("Slika", slika) :
                new ObjectParameter("Slika", typeof(byte[]));
    
            var slikaThumbParameter = slikaThumb != null ?
                new ObjectParameter("SlikaThumb", slikaThumb) :
                new ObjectParameter("SlikaThumb", typeof(byte[]));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("esp_Slika_Insert", eventGalleryIDParameter, slikaParameter, slikaThumbParameter, opisParameter);
        }
    
        public virtual int esp_Slika_Update(Nullable<int> slikaID, string opis)
        {
            var slikaIDParameter = slikaID.HasValue ?
                new ObjectParameter("SlikaID", slikaID) :
                new ObjectParameter("SlikaID", typeof(int));
    
            var opisParameter = opis != null ?
                new ObjectParameter("Opis", opis) :
                new ObjectParameter("Opis", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("esp_Slika_Update", slikaIDParameter, opisParameter);
        }
    
        public virtual ObjectResult<esp_Uloga_SelectAll_Result> esp_Uloga_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Uloga_SelectAll_Result>("esp_Uloga_SelectAll");
        }
    
        public virtual ObjectResult<esp_Event_GetReport_Result> esp_Event_GetReport(Nullable<int> eventID)
        {
            var eventIDParameter = eventID.HasValue ?
                new ObjectParameter("EventID", eventID) :
                new ObjectParameter("EventID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<esp_Event_GetReport_Result>("esp_Event_GetReport", eventIDParameter);
        }
    }
}
